Q1. 리액트를 사용하는 이유를 설명해보세요 (2가지 이상)
    - 컴포넌트 나누니까 관리하기 편함
    - 대중적인 라이브러리들이 사용하기 편해서
    

Q2. (Q1)을 통해 얻을 수 있는 장점은 무엇일까요?
    - "재사용이 용이"하고 "관리 및 유지보수에 효율적"


Q3. 리액트가 가상 돔을 사용하는 이유는 무엇일까요?
    - 가상돔이 있어야 현재돔과 비교해서 렌더링 여부를 판단할 수 있어서?
    - 

Q4. 리액트가 가상 돔과 돔 트리를 비교하여 바뀐 부분이 있다면 화면을 다시 그리는 행위를 무엇이라 할까요?
    - 리렌더링


Q5. (Q3)의 행위를 통해 얻을 수 있는 이점은 무엇일까요?
    - 랜더링 최적화


Q6. (Q3)은 리액트에서 어느 순간에 실현될까요?
    - state가 변할때

Q7. 훅 함수는 왜 만들게 되었을까요?
    아래의 훅 함수는 각 언제 선언되어야 할까요?
    (1) useState : 상태가 변화돼서 렌더링이 되어야할때 
    (2) useRef : state가 변해도 값이 유지될수 있게 / html 요소에 접근
    (3) useEffect : 마운트 / 언마운트될 때 
    (4) useCallback : 함수를 캐싱(저장)하고 렌더링되어도 재사용할 수 있게 , 비동기 통신있을때만 사용한다
    (5) useMemo : 연산된 값을 캐싱(저장)하고 렌더링되어도 재사용할 수 있게 

Q8. 커스텀 훅을 제작하면서 얻을 수 있는 이점은 무엇이고 어느 때 만들어야 할까요?
    - 재사용이 가능하다
    - 공통으로 사용할 수 있을때


Q9. 리액트로 프로젝트를 만들려고할 때 고려해야하는 사항들을 아는대로 작성해보세요 (3가지 이상)
    - 검색엔진이 필요없고 화면이 더 빨리 보여주는게 더 효율적인 프로젝트
    - 
    - 

Q10. 만약 위의 질문에 모두 답을 했다면, 현재 부족한 것은 리액트가 아닌 자바스크립트 일 수 있습니다
    이전 풀어보았던 자바스크립트 API 문제 1~4와 board 문제를 현재 풀이할 수 있는지 확인해보세요
    
    react로 풀이를 한다고 가정했을 때와 (직접 바꿔보지는 말 것, 예제 문제와 유사)
    vanilla js(java script)로 풀이한다고 하였때 와의 차이점은 무엇일까요?

    * 위 문제를 받지 못한 수강생은 메일 전송 시 따로 첨부하여 송부

    - 컴포넌트 관리 
    - 랜더링
    

Q11. 리액트에서 컴포넌트를 나누는 기준은 어떻게 되어야할까요?
     또한, 이러한 관점은 개발자마다 다를 수 있는데 왜 그럴까요?

     - 프로젝트의 목적, 비즈니스 로직
     - 개발자의 우선순위에 따라 개인적 차별이 나타남
     